{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/client/src/components/FetchData.js\",\n  _class;\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true\n    };\n  }\n  componentDidMount() {\n    this.populateWeatherData();\n  }\n  static renderForecastsTable(forecasts) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tableLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temp. (C)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temp. (F)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecasts.map(forecast => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperatureC\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperatureF\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, forecast.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : FetchData.renderForecastsTable(this.state.forecasts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tableLabel\",\n        children: \"Weather forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates fetching data from the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  async populateWeatherData() {\n    const response = await fetch('users');\n    const data = await response.json();\n    this.setState({\n      forecasts: data,\n      loading: false\n    });\n  }\n}\n_class = FetchData;\nFetchData.displayName = _class.name;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","FetchData","constructor","props","state","forecasts","loading","componentDidMount","populateWeatherData","renderForecastsTable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","forecast","date","temperatureC","temperatureF","summary","render","contents","id","response","fetch","data","json","setState","_class","displayName","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/client/src/components/FetchData.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className=\"table table-striped\" aria-labelledby=\"tableLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tableLabel\">Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('users');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}